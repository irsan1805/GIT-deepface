# -*- coding: utf-8 -*-
"""nyobafaiss.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KVf6hQUTHhoQVGyCStTisUjVGj22XifF
"""

pip install deepface

pip install faiss-cpu

!git clone https://github.com/serengil/deepface.git

from deepface import DeepFace
import numpy as np
import os
import random
import faiss
import time

representations = []
for r, d, f in os.walk("deepface/tests/dataset/"):
    for file in f:
      if ".jpg" in file:
        exact_file = f"{r}/{file}"
        #print(exact_file)
        objs = DeepFace.represent(img_path = exact_file, model_name = "Facenet", detector_backend = "mtcnn")
        for obj in objs:
          embedding = obj['embedding']
          representations.append([file, embedding])

len(representations)

len(representations[0][1])

for i in range(len(representations), 1000000):
  key = f"synthetic_{i}.jpg"
  vector = [random.gauss(-0.5,0.5) for z in range(128)]
  representations.append([key, vector])

len(representations)

embeddings = []
for key , value in representations:
  embeddings.append(value)

index = faiss.IndexFlatL2(128)

index.add(np.array(embeddings, dtype = "f"))

target_path = "target.jpg"

target_embedding = DeepFace.represent(img_path = target_path, model_name = "Facenet", detector_backend = "mtcnn") [0]["embedding"]

target_embedding = np.array(target_embedding, dtype = "f")

np.expand_dims(target_embedding, axis = 0)

target_embedding.shape

k = 3
tic = time.time()
target_embedding = np.expand_dims(target_embedding, axis = 0)
distances, neighbours = index.search(target_embedding, k)
toc = time.time()

print(toc - tic, "seconds")

neighbours

representations [48]

representations [16]